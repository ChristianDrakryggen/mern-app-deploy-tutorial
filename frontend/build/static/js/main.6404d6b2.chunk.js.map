{"version":3,"sources":["services/PostService.js","components/Post.js","components/Posts.js","App.js","index.js"],"names":["post","fetch","method","body","JSON","stringify","headers","then","res","json","data","id","Post","props","_id","title","content","useState","setPost","editing","setEditing","deleted","setDeleted","onChange","e","target","name","value","useEffect","style","padding","borderBottom","paddingTop","margin","fontWeight","onClick","PostService","console","log","message","msgError","setPosts","posts","alert","msgBody","marginBottom","onSubmit","preventDefault","type","Posts","length","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6404d6b2.chunk.js","sourcesContent":["export default {\r\n  newPost: (post) => {\r\n    return fetch(\"api/newpost\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(post),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }).then((res) => {\r\n      return res.json().then((data) => data);\r\n    });\r\n  },\r\n  getPosts: () => {\r\n    return fetch(\"api/getposts\").then((res) => {\r\n      return res.json().then((data) => data);\r\n    });\r\n  },\r\n  updatePost: (post) => {\r\n    return fetch(\"api/updatepost\", {\r\n      method: \"put\",\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      return res.json().then((data) => data);\r\n    });\r\n  },\r\n  deletePost: (id) => {\r\n    return fetch(\"api/deletepost\", {\r\n      method: \"delete\",\r\n      body: JSON.stringify(id),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      return res.json().then((data) => data);\r\n    });\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostService from \"../services/PostService\";\r\n\r\nconst Post = (props) => {\r\n  const { _id, title, content } = props.post;\r\n\r\n  const [post, setPost] = useState({ _id: null, title: \"\", content: \"\" });\r\n  const [editing, setEditing] = useState(false);\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  const onChange = (e) => {\r\n    setPost({ ...post, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    PostService.updatePost(post).then((data) => {\r\n      console.log(data.message);\r\n      if (data.message.msgError === false) {\r\n        PostService.getPosts().then((data) => {\r\n          props.setPosts(data.posts);\r\n          setEditing(false);\r\n        });\r\n      } else {\r\n        alert(data.message.msgBody);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deletePost = () => {\r\n    PostService.deletePost({ _id: post._id }).then((data) => {\r\n      console.log(data.message);\r\n      if (data.message.msgError === false) {\r\n        setDeleted(true);\r\n        PostService.getPosts().then((data) => {\r\n          props.setPosts(data.posts);\r\n          setEditing(false);\r\n        });\r\n      } else {\r\n        alert(data.message.msgBody);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!deleted) {\r\n      setPost({ _id, title, content });\r\n      setDeleted(false);\r\n    }\r\n  }, [editing]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"10px\",\r\n        borderBottom: \"1px  solid #e1e1e1\",\r\n        paddingTop: \"0px\",\r\n      }}\r\n    >\r\n      {!editing && (\r\n        <div style={{ margin: \"20px 0px\" }}>\r\n          <p style={{ fontWeight: \"bold\" }}>{title}</p>\r\n          <p>{content}</p>\r\n          <button onClick={() => setEditing(true)}>Edit</button>\r\n          <button onClick={deletePost}>Delete</button>\r\n        </div>\r\n      )}\r\n      {editing && (\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <p>{`Editing (${post.title})`}</p>\r\n          <form onSubmit={onSubmit}>\r\n            <input name=\"title\" value={post.title} onChange={onChange} />\r\n            <br />\r\n            <br />\r\n            <input name=\"content\" value={post.content} onChange={onChange} />\r\n            <br />\r\n            <br />\r\n            <button type=\"submit\">Update</button>\r\n            <button onClick={() => setEditing(false)}>Close</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostService from \"../services/PostService\";\r\nimport Post from \"./Post\";\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [post, setPost] = useState({ title: \"\", content: \"\" });\r\n\r\n  const getPosts = () => {\r\n    PostService.getPosts().then((data) => {\r\n      if (data) {\r\n        setPosts(data.posts);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setPost({ ...post, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    PostService.newPost(post).then((data) => {\r\n      console.log(data.message);\r\n      if (data.message.msgError === false) {\r\n        PostService.getPosts().then((data) => {\r\n          setPosts(data.posts);\r\n          setPost({ title: \"\", content: \"\" });\r\n        });\r\n      } else {\r\n        alert(data.message.msgBody);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  console.log(posts);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} style={{ margin: \"20px 0px\" }}>\r\n        <input name=\"title\" value={post.title} onChange={onChange} />\r\n        <input name=\"content\" value={post.content} onChange={onChange} />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      {posts.length > 0 ? (\r\n        posts.map((post) => (\r\n          <Post key={post._id} post={post} setPosts={setPosts} />\r\n        ))\r\n      ) : (\r\n        <p>No posts...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\nimport Posts from \"./components/Posts\";\n\nfunction App() {\n  return (\n    <>\n      <h1>The Post Stuff App</h1>\n      <Posts />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}